@model UIEngineerTicket

<h1>Engineer Ticket Detail</h1>
<p>User Created: @Model.UserID</p>
<p>Date Created: @Model.DateCreated.ToShortDateString()</p>
<p>Content: @Model.Content</p>

<div>UPDATE TICKET</div>
<div>
    <label for="selection">Ticket Status:</label>
    <select id="selection" name="selection">
        <option value="Open" @(Model.Status == "Open" ? "selected" : "")>Open</option>
        <option value="InProgress" @(Model.Status == "InProgress" ? "selected" : "")>In Progress</option>
        <option value="Pending" @(Model.Status == "Pending" ? "selected" : "")>Pending</option>
        <option value="Resolve" @(Model.Status == "Resolve" ? "selected" : "")>Resolve</option>
    </select>
</div>
<div>
    <button onclick="updateTicket()">Submit</button>
</div>
<div id="update_result"></div>

<script>
    function updateTicket() {
        var selection = document.getElementById("selection").value;

        var data = {
            status: selection
        };

        var ticketID = @Model.TicketID;

        fetch('/ticket/engineer/' + ticketID, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
        .then(response => response.text())
        .then(data => {
            document.getElementById("update_result").innerHTML = data;
        })
        .catch(error => {
            document.getElementById("update_result").innerHTML = error;
        });
    }
</script>