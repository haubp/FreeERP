@model CustomerSuccessTicket

<body onload="queryComment()" class="bg-gray-100">
    <div class="container mx-auto my-8 p-4">
        <div class="block w-full md:w-2/3 mx-auto border border-blue-500 p-4 rounded">
            <div class="flex items-center mb-4">
                <div class="w-8/12 bg-gray-200 p-2">
                    <p><b>User ID Created:</b> @Model.UserID</p>
                    <p><b>Date Created:</b> @Model.DateCreated.ToShortDateString()</p>
                    <p><b>Content:</b> @Model.Content</p>
                </div>
                <div class="w-4/12 bg-gray-300 p-2">
                    <h1 class="text-center font-bold">UPDATE TICKET</h1>
                    <div class="flex items-center mt-4">
                        <label for="selection">Ticket Status:</label>
                        <select class="ml-auto w-2/3 py-2 px-4 rounded border" id="selection" name="selection" onchange="updateTicket()">
                            <option value="Open" >Open</option>
                            <option value="InProgress" >In Progress</option>
                            <option value="Pending" >Pending</option>
                            <option value="Resolve" >Resolve</option>
                        </select>
                    </div>
                    <div class="mt-4 text-center text-green-600 font-bold" id="update_result"></div>
                </div>
            </div>

            <div class="border border-gray-500 my-4"></div>

            <div class="flex items-center mb-2">
                <button onclick="queryComment()" class="ml-auto flex items-center bg-gray-200 hover:bg-gray-300 text-gray-700 hover:text-gray-800 font-bold py-2 px-4 rounded">
                    <i class="fas fa-sync mr-2"></i>
                    Refresh
                </button>
            </div>
            <div class="flex items-center mb-2">
                <textarea class="w-10/12 h-20 resize-none rounded border" type="text" id="comment-content" value=""></textarea>
                <button type="submit" onclick="postComment()" class="ml-2 bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded">
                    Save
                </button>
            </div>
            <div class="mt-2 text-green-600 font-bold" id="postCommentResult"></div>
            <div id="comments" class="mt-4"></div>
        </div>
    </div>
    <script>
        function updateTicket() {
            var selection = document.getElementById("selection").value;

            var data = {
                Status: selection
            };

            var ticketID = @Model.ID;

            fetch('/ticket/cs/' + ticketID, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
                .then(response => response.text())
                .then(data => {
                    document.getElementById("update_result").innerHTML = data;
                })
                .catch(error => {
                    document.getElementById("update_result").innerHTML = error;
                });
        }
        function postComment() {
            var ticketID = @Model.ID;
            var userID = @Model.UserID;
            var content = document.getElementById("comment-content").value;
            document.getElementById("comment-content").value = "";

            var data = {
                TicketID: ticketID,
                UserID: userID,
                Content: content,
            };

            console.log(data);

            fetch('/comment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
                .then(response => response.text())
                .then(data => {
                    document.getElementById("postCommentResult").innerHTML = data;
                })
                .catch(error => {
                    document.getElementById("postCommentResult").innerHTML = error;
                });
        }
        function queryComment() {
            var ticketID = @Model.ID;

            fetch('/comment/' + ticketID, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    var content = "";
                    for (var i = 0; i < data.length; i++) {
                        content += data[i];
                        content += '<br />';
                    }
                    document.getElementById("comments").innerHTML = content;
                })
                .catch(error => {
                    document.getElementById("comments").innerHTML = error;
                });
        }
    </script>
</body>
